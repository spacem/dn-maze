{"version":3,"sources":["ng-app.js","columnsToLoadService.js","dntDataService.js","dntResetService.js","jobService.js","onlineService.js","regionService.js","translationService.js","build/create.js","build/view-build.js","filters/escape.filter.js","filters/percentage.filter.js","menus/build-menu.js","menus/home-menu.js","menus/legacy-menu.js","nav/header.js","region/region.js","sim/sim.js","online/build-search.js","online/profile.js","online/publish.js","online/published.js","widgets/choose-class.js","widgets/dnsim-job-icon.js","widgets/dnsim-loading.js","routes.js"],"names":[],"mappingsvtjlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClnpfile":"extras.min.js","sourcesContent":["(function () {\r\n'use strict';\r\n\r\n// templates are imported via gulp job\r\nangular.module('templates', []);\r\n\r\nvar baseElement = angular.element(document).find('base');\r\nif(baseElement.length == 1 && baseElement[0].href && baseElement[0].href.indexOf('/dnskillsim/') > 0) {\r\n    angular.module('dnsim', ['ngRoute','angulartics','angulartics.google.analytics','templates', 'ngAria', 'infinite-scroll']);\r\n    angular.module('dnsim').config(['$locationProvider', setupHtml5Mode]);\r\n    angular.module('dnsim').config(['$compileProvider', allowAutoBindings]);\r\n}\r\nelse {\r\n    console.log('base', baseElement);\r\n    angular.module('dnsim', ['ngRoute','templates']);\r\n}\r\n\r\nfunction allowAutoBindings($compileProvider) {\r\n    // angular 1.6 requires use of $onInit unless this config is set\r\n    // https://toddmotto.com/angular-1-6-is-here\r\n    $compileProvider.preAssignBindingsEnabled(true);\r\n};\r\n\r\nfunction setupHtml5Mode($locationProvider) {\r\n    $locationProvider.html5Mode({\r\n        enabled: true,\r\n        requireBase: true,\r\n        rewriteLinks: true\r\n    });\r\n};\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('itemColumnsToLoad',[itemColumnsToLoad]);\r\nfunction itemColumnsToLoad() {\r\n  return {\r\n    mainDnt: {\r\n      NameID: true, DescriptionID: true, NameIDParam: true, DescriptionIDParam: true,\r\n      Type: true,TypeParam1: true,TypeParam2: true, TypeParam3: true, LevelLimit: true, NeedJobClass: true, Rank: true,\r\n      State1: true, StateValue1: true, State1_Max: true, State1_GenProb: true,\r\n      State2: true, StateValue2: true, State2_Max: true,\r\n      State3: true, StateValue3: true, State3_Max: true,\r\n      State4: true, StateValue4: true, State4_Max: true,\r\n      State5: true, StateValue5: true, State5_Max: true,\r\n      State6: true, StateValue6: true, State6_Max: true,\r\n      State7: true, StateValue7: true, State7_Max: true,\r\n      State8: true, StateValue8: true, State8_Max: true,\r\n      State9: true, StateValue9: true, State9_Max: true,\r\n      State10: true,StateValue10: true,State10_Max: true,\r\n      EnchantID: true,\r\n      SkillID: true,\r\n      dragonjeweltype: true, AbleWStorage: true, ExchangeType:true, IconImageIndex: true, IsCash: true, DisjointDrop1: true, Disjointamount: true\r\n    },\r\n    partsDnt: {\r\n      SetItemID: true\r\n    },\r\n    enchantDnt: {\r\n      EnchantID: true,EnchantLevel: true,EnchantRatio: true,BreakRatio: true,MinDown: true,MaxDown: true,NeedCoin: true,\r\n      DisjointDrop: true,\r\n      NeedItemID1: true,NeedItemCount1: true,NeedItemID2: true,NeedItemCount2: true,NeedItemID3: true,NeedItemCount3: true,NeedItemID4: true,NeedItemCount4: true,NeedItemID5: true,NeedItemCount5: true,ProtectItemCount: true,\r\n      State1: true,State1Value: true,State2: true,State2Value: true,State3: true,State3Value: true,State4: true,State4Value: true,State5: true,State5Value: true,State6: true,State6Value: true,State7: true,State7Value: true,State8: true,State8Value: true,State9: true,State9Value: true,State10: true,State10Value: true\r\n    },\r\n    potentialDnt : {\r\n      PotentialID: true, PotentialNo: true,PotentialRatio: true,\r\n      State1: true,State1Value: true,\r\n      State2: true,State2Value: true,\r\n      State3: true,State3Value: true,\r\n      State4: true,State4Value: true,\r\n      State5: true,State5Value: true,\r\n      State6: true,State6Value: true,\r\n      State7: true,State7Value: true,\r\n      State8: true,State8Value: true,\r\n      State9: true,State9Value: true,\r\n      State10: true,State10Value: true,\r\n      State11: true,State11Value: true,\r\n      State12: true,State12Value: true,\r\n      State13: true,State13Value: true,\r\n      State14: true,State14Value: true,\r\n      State15: true,State15Value: true,\r\n      State16: true,State16Value: true\r\n    },\r\n    gemDnt: {\r\n      Type: true\r\n    },\r\n    setDnt : null,\r\n    sparkDnt: null,\r\n    jobsDnt: {\r\n      JobName: true,JobNumber: true,BaseClass: true,ParentJob: true, EnglishName: true, JobIcon: true\r\n    },\r\n    jobBaseStatColsToLoad: {\r\n      Strength:true,Agility:true,Intelligence:true,Stamina:true,AggroperPvE:true,BaseMP:true\r\n    },\r\n    statCapColsToLoad: {\r\n      Cbase: true,\r\n      Cdefense: true,\r\n      Ccritical: true,\r\n      Cfinaldamage: true,\r\n      CcriticalDamage: true,\r\n    },\r\n    jobConversionColsToLoad: {\r\n      HP: true,StrengthAttack: true,AgilityAttack: true,IntelligenceAttack: true,PhysicalDefense: true,MagicDefense: true,Critical: true,CriticalResistance: true,Stiff: true,StiffResistance: true,Stun: true,StunResistance: true,MoveSpeed: true,MoveSpeedRevision: true,DownDelay: true,ElementAttack: true,ElementDefense: true,ElementDefenseMin: true,ElementDefenseMax: true,StrengthIntelligenceToCriticalDamage: true\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntData', ['$rootScope','$timeout',dntData]);\r\n\r\nfunction dntData($rootScope,$timeout) {\r\n  \r\n  function createLoader(dntLocation, file, colsToLoad) {\r\n\r\n    var loader = {\r\n      reader: new DntReader(),\r\n      \r\n      loaded: false,\r\n      startedLoading: false,\r\n      \r\n      file: file,\r\n      \r\n      dntLocation: dntLocation,\r\n      progressCallback: null,\r\n      completeCallbacks : [],\r\n      \r\n      init: function(progress, complete) {\r\n        \r\n        if(this.loaded) {\r\n          complete();\r\n        }\r\n        else {\r\n          this.progressCallback = progress;\r\n          this.completeCallbacks.push(complete);\r\n          \r\n          if(!this.startedLoading) {\r\n            this.startedLoading = true;\r\n            var t = this;\r\n            \r\n            this.reader.colsToLoad = colsToLoad;\r\n            \r\n            if(this.dntLocation && \r\n              this.dntLocation.url &&\r\n              this.dntLocation.url.length) {\r\n\r\n              $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n\r\n              $timeout(function() {\r\n                t.reader.loadDntFromServerFile(\r\n                  t.dntLocation.url + '/' + file,\r\n                  function(msg) { if(t.progressCallback != null) t.progressCallback(msg) }, \r\n                  function(result, fileName) {\r\n                    // console.info('dnt loading complete : ' + file);\r\n                    t.loaded = true;\r\n                    \r\n                    angular.forEach(t.completeCallbacks, function(value, key) {\r\n                      value();\r\n                    });\r\n                    t.completeCallbacks = [];\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_EVENT');\r\n                  },\r\n                  function(msg) {\r\n                    $rootScope.$broadcast('DNTDATA_LOAD_ERROR');\r\n                    t.startedLoading = false;\r\n                    t.loaded = false;\r\n                  }  );\r\n              });\r\n            }\r\n            else {\r\n              // console.log(\"dnt location not set!\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \r\n      reset: function() {\r\n        this.reader = new DntReader();\r\n        this.loaded = false;\r\n        this.startedLoading = false;\r\n      }\r\n    }\r\n  \r\n    return loader;\r\n  };\r\n  \r\n  return {\r\n    loaders : {},\r\n    findIndexes : {},\r\n    dntLocation : null,\r\n    \r\n    setLocation: function(location) {\r\n      this.dntLocation = location;\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(value.dntLocation != location) {\r\n          value.dntLocation = location;\r\n          t.reset(key);\r\n        }\r\n      });\r\n    },\r\n    \r\n    init : function (fileName, colsToLoad, progress, complete) {\r\n      if(!progress) {\r\n        progress = function() {};\r\n      }\r\n      if(!(fileName in this.loaders)) {\r\n        if(fileName.length > 0) {\r\n          this.loaders[fileName] = createLoader(this.dntLocation, fileName, colsToLoad);\r\n        }\r\n      }\r\n      this.loaders[fileName].init(progress, complete);\r\n    },\r\n    getData : function (fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        var reader = this.loaders[fileName].reader;\r\n        var retVal = new Array(reader.numRows);\r\n        for(var i=0;i<reader.numRows;++i) {\r\n          retVal[i] = reader.getRow(i);\r\n        }\r\n        \r\n        return retVal;\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    },\r\n    find : function(fileName, column, value) {\r\n      var results = this.findFast(fileName, column, value);\r\n      var retVal = [];\r\n      var numResults = results.length;\r\n      for(var i=0;i<numResults;++i) {\r\n        retVal.push(this.getRow(fileName, results[i]));\r\n      }\r\n      \r\n      return retVal;\r\n    },\r\n    findFast : function(fileName, column, value) {\r\n      \r\n      if(this.isLoaded(fileName)) {\r\n        if(!(fileName in this.findIndexes)){\r\n          this.findIndexes[fileName] = {};\r\n        }\r\n        \r\n        var reader = this.loaders[fileName].reader;\r\n        var colIndex = reader.columnIndexes[column];\r\n        \r\n        var findIndex = this.findIndexes[fileName];\r\n        \r\n        if(!(column in findIndex)) {\r\n          var index = {}\r\n          findIndex[column] = index;\r\n          \r\n          var results = [];\r\n          \r\n          var data = reader.data;\r\n          var len = data.length;\r\n          for(var r=0;r<len;++r) {\r\n            var d = data[r];\r\n            var val = d[colIndex];\r\n\r\n            if(!(val in index)) {\r\n              index[val] = [r];\r\n            }\r\n            else {\r\n              index[val].push(r);\r\n            }\r\n          }\r\n        }\r\n        \r\n        if(value in findIndex[column]) {\r\n          return findIndex[column][value];\r\n        }\r\n        else {\r\n          return [];\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    },\r\n    isLoaded : function(fileName) {\r\n      return fileName in this.loaders && this.loaders[fileName].loaded;\r\n    },\r\n    hasStartedLoading : function(fileName) {\r\n      return this.isLoaded(fileName) || (fileName in this.loaders && this.loaders[fileName].startedLoading);\r\n    },\r\n    reset : function(fileName) {\r\n      if(fileName in this.loaders) {\r\n        this.loaders[fileName].reset();\r\n        delete this.loaders[fileName];\r\n        delete this.findIndexes[fileName];\r\n      }\r\n    },\r\n    resetAll : function() {\r\n      var t = this;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        t.reset(key);\r\n      });\r\n    },\r\n    anyLoading : function() {\r\n      var t = this;\r\n      var found = 0;\r\n      angular.forEach(this.loaders, function(value, key) {\r\n        if(!value.loaded && value.startedLoading) {\r\n          found++;\r\n        }\r\n      });\r\n      \r\n      return found;\r\n    },\r\n    getNumRows : function(fileName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.numRows;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    },\r\n    getRow : function(fileName, index) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getRow(index);\r\n      }\r\n      else {\r\n        return {};\r\n      }\r\n    },\r\n    lookupValue: function(fileName, data, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return data[this.loaders[fileName].reader.columnNames[columnName]];\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    convertData: function(fileName, data) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.convertData(data);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    },\r\n    getValue : function(fileName, index, columnName) {\r\n      if(this.isLoaded(fileName)) {\r\n        return this.loaders[fileName].reader.getValue(index, columnName);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('dntReset',['jobs','dntData',dntReset]);\r\nfunction dntReset(jobs, dntData) {\r\n  return function() {\r\n    \r\n    jobs.reset();\r\n    dntData.resetAll();\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('jobs', ['dntData', 'translations', 'itemColumnsToLoad', jobs]);\r\nfunction jobs(dntData, translations, itemColumnsToLoad) {\r\n  \r\n  var fileName ='jobtable.json';\r\n  var colsToLoad = itemColumnsToLoad.jobsDnt;\r\n  \r\n  return {\r\n    fileName : fileName,\r\n    allJobs : null,\r\n    \r\n    isLoaded : function() {\r\n      return dntData.isLoaded(fileName);\r\n    },\r\n    \r\n    hasStartedLoading: function() {\r\n      return dntData.hasStartedLoading(fileName);\r\n    },\r\n    \r\n    init : function(progress, complete) {\r\n      dntData.init(fileName, colsToLoad, progress, function() {\r\n        complete();\r\n        });\r\n    },\r\n\r\n    reset : function() {\r\n      this.allJobs = null;\r\n      dntData.reset(fileName);\r\n    },\r\n    \r\n    getFinalJobs : function () {\r\n      var jobs = [];\r\n      var alljobs = this.getAllJobs();\r\n      if(alljobs) {\r\n        var numRows = alljobs.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(alljobs[r].d.JobNumber == 2 && alljobs[r].d.JobIcon > 0) {\r\n            jobs.push(alljobs[r]);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return jobs;\r\n    },\r\n    \r\n    getBaseJobs : function () {\r\n      var retVal=[];\r\n      var baseJobs = {};\r\n\r\n      var self = this;\r\n      angular.forEach(this.getFinalJobs(), function(job, key) {\r\n        baseJobs[self.getBaseJobName(job)] = job;\r\n      });\r\n\r\n      angular.forEach(baseJobs, function(job, jobName) {\r\n        retVal.push(jobName);\r\n      });\r\n\r\n      return retVal;\r\n    },\r\n    \r\n    getAllJobs : function () {\r\n      if(this.allJobs == null && this.isLoaded() && translations.isLoaded()) {\r\n        var jobs = [];\r\n        var data = dntData.getData(fileName);\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          jobs[jobs.length] = this.createJob(data[r]);\r\n        }\r\n        \r\n        this.allJobs = jobs;\r\n      }\r\n      return this.allJobs;\r\n    },\r\n    \r\n    getById: function(id) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].id == id) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    getByEnglishName: function(englishName) {\r\n      var data = this.getAllJobs();\r\n      if(data) {\r\n        var numRows = data.length;\r\n        for(var r=0;r<numRows;++r) {\r\n          if(data[r].d.EnglishName == englishName) {\r\n            return data[r];\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    createJob : function(d) {\r\n      var t = this;\r\n      return {\r\n          d : d,\r\n          id : d.id,\r\n          name : translations.translate(d.JobName),\r\n          isClassJob : function(c) {\r\n            return t.isClassJob(d, c);\r\n          }\r\n        };\r\n    },\r\n    \r\n    isClassJob : function (d, c) {\r\n      if(c == 0) return true;\r\n      if(d.id == c) {\r\n        return true;\r\n      }\r\n      \r\n      var parentJob = d.ParentJob;\r\n      \r\n      if(!parentJob) return false;\r\n      if(parentJob == c) return true;\r\n\r\n      var parentJobData = this.getById(parentJob);\r\n      if(parentJobData) {\r\n        return this.isClassJob(parentJobData.d, c);\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    getBaseJobName : function(job) {\r\n      if(this.isLoaded()) {\r\n        var alljobs = this.getAllJobs();\r\n        if(alljobs) {\r\n          var numRows = alljobs.length;\r\n          for(var r=0;r<numRows;++r) {\r\n            if(alljobs[r].id == (job.d.BaseClass+1) && alljobs[r].d.EnglishName) {\r\n              return alljobs[r].d.EnglishName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      return null;\r\n    },\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('onlineService', ['$window','$q',onlineService]);\r\n\r\nfunction onlineService($window, $q) {\r\n  console.log('setup online service');\r\n  \r\n  var service = {\r\n    login: login,\r\n    getUser: function() {\r\n      return firebase.auth().currentUser;\r\n    },\r\n    signOut: signOut,\r\n    deleteAccount: deleteAccount,\r\n    \r\n    getUserBuilds: getUserBuilds,\r\n    deleteBuild: deleteBuild,\r\n    saveBuild: saveBuild,\r\n    getBuild: getBuild,\r\n    getClassBuilds: getClassBuilds,\r\n    \r\n    getProfile: getProfile,\r\n    saveProfile: saveProfile,\r\n    \r\n    stripBuildName: stripBuildName\r\n  };\r\n  \r\n  init();\r\n  \r\n  return service;\r\n  \r\n  function init() {\r\n    console.log('init');\r\n    firebase.initializeApp({\r\n      apiKey: \"AIzaSyC-Mckgho1xAI2SQzsKnpsr2ObDKOhdSrE\",\r\n      authDomain: \"dngearsim.firebaseapp.com\",\r\n      databaseURL: \"https://dngearsim.firebaseio.com\",\r\n      storageBucket: \"dngearsim.appspot.com\",\r\n    });\r\n  }\r\n  \r\n  function login() {\r\n    return $q(function(resolve, reject) {\r\n      var auth = firebase.auth();\r\n        \r\n      auth.onAuthStateChanged(function(user) {\r\n        if(user == null) {\r\n          console.log('redirecting');\r\n          $window.location.href = 'login.html';\r\n        }\r\n        else {\r\n          console.log('logged in');\r\n          resolve(user);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getProfile(uid) {\r\n    console.log('get profile');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('profile/' + uid).once('value', function(storedProfile) {\r\n        if(storedProfile) {\r\n          resolve(storedProfile.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getBuild(uid, buildName) {\r\n    console.log('get build');\r\n    return $q(function(resolve, reject) {\r\n      firebase.database().ref('skill-builds/' + uid + '/' + stripBuildName(buildName)).once('value', function(storedProfile) {\r\n        if(storedProfile && storedProfile.val()) {\r\n          try {\r\n            resolve(decompressBuild(storedProfile.val()));\r\n          }\r\n          catch(ex) {\r\n            reject(ex);\r\n          }\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function saveProfile(profile) {\r\n    return $q(function(resolve, reject) {\r\n      var user = service.getUser();\r\n      if(user) {\r\n        profile = angular.copy(profile);\r\n        deleteNullProperties(profile, true);\r\n        firebase.database().ref('profile/' + user.uid).set(profile).then(resolve);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getUserBuilds(uid) {\r\n    console.log('get builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds');\r\n      firebase.database().ref('skill-builds/' + uid).once('value', function(storedBuilds) {\r\n        if(storedBuilds) {\r\n          try {\r\n            var retVal = {};\r\n            var val = storedBuilds.val();\r\n            for(var buildName in val) {\r\n              retVal[buildName] = decompressBuild(val[buildName]);\r\n            }\r\n            resolve(retVal);\r\n          }\r\n          catch(ex) {\r\n            reject(ex);\r\n          }\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function getClassBuilds(job, level) {\r\n    console.log('get class builds');\r\n    return $q(function(resolve, reject) {\r\n      // console.log('getting builds', job.id);\r\n      \r\n      let path;\r\n      if(level) {\r\n        path = 'level-job-skill-builds/' + level + '/' + job.id;\r\n      }\r\n      else {\r\n        path = 'job-skill-builds/' + job.id;\r\n      }\r\n      \r\n      firebase.database().ref(path).once('value', function(jobBuilds) {\r\n        // console.log('ok');\r\n        if(jobBuilds) {\r\n          resolve(jobBuilds.val());\r\n        }\r\n        else {\r\n          resolve({});\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  function compressBuild(build) {\r\n    \r\n    if(build.items) {\r\n      _.each(build.items, function(item) {\r\n        delete item.fullStats;\r\n      });\r\n    }\r\n    \r\n    var stringifiedData = JSON.stringify(build);\r\n    return LZString.compressToUTF16(stringifiedData);\r\n  }\r\n  \r\n  function decompressBuild(compressedBuild) {\r\n    try {\r\n      var stringifiedData = LZString.decompressFromUTF16(compressedBuild);\r\n      var build = JSON.parse(stringifiedData);\r\n      \r\n      if(build.items) {\r\n        _.each(build.items, function(item) {\r\n          item.fullStats = item.stats;\r\n          \r\n          if(item.enchantmentStats && item.enchantmentStats.length) {\r\n            item.fullStats = hCodeValues.mergeStats(item.enchantmentStats, item.fullStats);\r\n          }\r\n          \r\n          if(item.sparkStats && item.sparkStats.length) {\r\n            item.fullStats = hCodeValues.mergeStats(item.sparkStats, item.fullStats);\r\n          }\r\n        });\r\n      }\r\n      \r\n      return build;\r\n    }\r\n    catch(ex) {\r\n      console.log('cannot parse build ', stringifiedData);\r\n      throw ex;\r\n    }\r\n  }\r\n  \r\n  function saveBuild(buildName, build) {\r\n    var user = service.getUser();\r\n    var actions = [];\r\n    if(user) {\r\n      build = angular.copy(build);\r\n      deleteNullProperties(build, true);\r\n      // console.log('saving', build);\r\n      actions.push(\r\n        firebase.database().ref('skill-builds/' + user.uid + '/' + stripBuildName(buildName)).set(compressBuild(build))\r\n      );\r\n      \r\n      if(build.job) {\r\n        console.log('saving build');\r\n          \r\n        var data = {};\r\n        if(build.region) {\r\n          data.region = build.region;\r\n        }\r\n        if(build.guild) {\r\n          data.guild = build.guild;\r\n        }\r\n        if(build.about) {\r\n          data.about = build.about;\r\n        }\r\n        \r\n        deleteNullProperties(data, true);\r\n          \r\n        actions.push(\r\n          firebase.database().ref('job-skill-builds/' + build.job + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n        actions.push(\r\n          firebase.database().ref('level-job-skill-builds/' + build.level + '/' + build.job + '/' + user.uid + '/' + stripBuildName(buildName)).set(data)\r\n        );\r\n      }\r\n    }\r\n    return $q.all(actions);\r\n  }\r\n  \r\n  function deleteNullProperties(test, recurse) {\r\n    for (var i in test) {\r\n        if (test[i] === undefined) {\r\n            delete test[i];\r\n        } else if (recurse && typeof test[i] === 'object') {\r\n            deleteNullProperties(test[i], recurse);\r\n        }\r\n    }\r\n  }\r\n  \r\n  function signOut() {\r\n    var auth = firebase.auth();\r\n    return $q(function(resolve, reject) {\r\n      auth.signOut().then(function() {\r\n        resolve();\r\n      }, function(error) {\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteAccount(builds) {\r\n    var auth = firebase.auth();\r\n    var user = service.getUser();\r\n    \r\n    return $q(function(resolve, reject) {\r\n      \r\n      var pList = [\r\n        firebase.database().ref('builds/' + user.uid).remove(),\r\n        firebase.database().ref('skill-builds/' + user.uid).remove(),\r\n        firebase.database().ref('profile/' + user.uid).remove(),\r\n        firebase.database().ref('private/' + user.uid).remove()];\r\n        \r\n      for(var buildName in builds) {\r\n        if(builds[buildName].job) {\r\n          let build = builds[buildName];\r\n          let id = builds[buildName].job;\r\n      \r\n          pList.push(\r\n            firebase.database().ref('job-builds/' + id + '/' + user.uid).remove()\r\n          );\r\n          pList.push(\r\n            firebase.database().ref('job-skill-builds/' + build.job + '/' + user.uid).remove()\r\n          )\r\n          if(build.level) {\r\n            pList.push(\r\n              firebase.database().ref('job-skill-builds/' + build.level + '/' + build.job + '/' + user.uid).remove()\r\n            )\r\n          }\r\n        }\r\n      }\r\n        \r\n      $q.all(pList).then(function() {\r\n        console.log('deleted data');\r\n        user.delete().then(function() {\r\n          console.log('deleted user');\r\n          auth.signOut().then(function() {\r\n            console.log('signed out');\r\n            resolve();\r\n          }, function(error) {\r\n            reject();\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n  \r\n  function deleteBuild(buildName, build) {\r\n    \r\n    var pList = [];\r\n    var user = service.getUser();\r\n    if(user) {\r\n      pList.push(\r\n        firebase.database().ref('skill-builds/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      \r\n      if(build.job) {\r\n        pList.push(\r\n          firebase.database().ref('job-skill-builds/' + build.job + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n        pList.push(\r\n          firebase.database().ref('level-job-skill-builds/' + build.level + '/' + build.job + '/' + user.uid + '/' + stripBuildName(buildName)).remove());\r\n      }\r\n    }\r\n    \r\n    return $q.all(pList);\r\n  }\r\n  \r\n  function stripBuildName(buildName) {\r\n    return buildName.replace(/[.$\\[\\]#\\/]/g, '');\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('region', ['translations','dntReset','dntData','$window','$timeout','$route', region]);\r\nfunction region(translations,dntReset,dntData,$window,$timeout,$route) {\r\n  \r\n  var alternativeFiles = {region: 'ALT', name: 'Alternative user specified files', url : ''};\r\n  var hostedFiles =[\r\n    {region: 'sea', name: 'south east asia', url : 'https://seadnfiles.netlify.com/public'},\r\n      {region: 'na', name: 'north america', url : 'https://nadnfiles.netlify.com/public'},\r\n      {region: 'th', name: 'thailand', url : 'https://thdnfiles.netlify.com/public'},\r\n      {region: 'tw', name: 'taiwan 臺灣', url : 'https://twdnfiles.firebaseapp.com'},\r\n      {region: 'jdn', name: 'japan 日本', url : 'https://jdnfiles.netlify.com/public'},\r\n      {region: 'cdn', name: 'china 中國', url : 'https://cdnfiles.netlify.com/public'},\r\n      {region: 'kdn', name: 'korea 대한민국', url : 'https://kdnfiles.netlify.com/public'},\r\n    ];\r\n  \r\n  var dntLocationRegion = localStorage.getItem('lastDNTRegion');\r\n  var dntLocation = null;\r\n  if(dntLocationRegion != null) {\r\n    angular.forEach(hostedFiles, function(hostedFile, index) {\r\n      if(hostedFile.region == dntLocationRegion) {\r\n        dntLocation = hostedFile;\r\n      }\r\n    });\r\n  }\r\n  \r\n  function getLocationFromUrl(url) {\r\n    var parts = $window.location.href.replace('//', ':').split('/');\r\n    if(parts.length > 1) {\r\n      return parts[1];\r\n    }\r\n  }\r\n\r\n  return {\r\n    hostedFiles : hostedFiles,\r\n    alternativeFiles : alternativeFiles,\r\n    dntLocation : dntLocation,\r\n    \r\n    setCustomUrl: function(url) {\r\n      // console.log('setting custom location');\r\n      this.alternativeFiles.url = url;\r\n\r\n      var newFiles = [];\r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region != alternativeFiles.region) {\r\n          newFiles.push(hostedFile);\r\n        }\r\n      });\r\n  \r\n      newFiles.push(alternativeFiles);\r\n      hostedFiles = newFiles;\r\n      this.hostedFiles = newFiles;\r\n    },\r\n    \r\n    setLocationByName: function(locationName) {\r\n      var newLocation = null;\r\n      \r\n      angular.forEach(hostedFiles, function(hostedFile, index) {\r\n        if(hostedFile.region == locationName) {\r\n          newLocation = hostedFile;\r\n        }\r\n      });\r\n        \r\n      this.setLocation(newLocation);\r\n    },\r\n    \r\n    setLocation: function(location) {\r\n      if(location && location != this.dntLocation) {\r\n        this.dntLocation = location;\r\n      }\r\n      \r\n      var currentLocation = getLocationFromUrl();\r\n      if(this.dntLocation && this.dntLocation.region != currentLocation) {\r\n        var parts = $window.location.href.replace('//', '::').split('/');\r\n        if(parts.length > 1 && parts[1] == 'dnskillsim') {\r\n          console.log('running github', location);\r\n          localStorage.setItem('lastDNTRegion', location.region);\r\n          this.setTLocation(location);\r\n          this.init();\r\n        }\r\n        else {\r\n          console.log('running on heroku');\r\n          var newUrl = $window.location.href.substring(0, parts[0].length) + '/' + this.dntLocation.region;\r\n          for(var i=2;i<parts.length;++i) {\r\n            newUrl += '/' + parts[i];\r\n          }\r\n          console.log('setting location to ', newUrl);\r\n          $window.location.href = newUrl;\r\n        }\r\n      }\r\n    },\r\n    \r\n    setTLocation: function(location) {\r\n      \r\n      if(location != this.tlocation) {\r\n        \r\n        this.tlocation = location;\r\n        sessionStorage.removeItem('UIStrings');\r\n        localStorage.removeItem('UIStrings_file');\r\n        dntReset();\r\n        translations.reset();\r\n        if(location) {\r\n          var override = this.getOverride();\r\n          translations.small = !override;\r\n          translations.location = this.tlocation.url;\r\n          translations.init(function() {}, function() {\r\n            $route.reload();\r\n          });\r\n        }\r\n      }\r\n    },\r\n    \r\n    init: function() {\r\n      var urlLocation = getLocationFromUrl();\r\n      if(urlLocation) {\r\n        if(urlLocation == 'dnskillsim') {\r\n          this.tlocation = this.dntLocation;\r\n          translations.small = true;\r\n          if(this.tlocation) {\r\n            translations.location = this.tlocation.url;\r\n          }\r\n          dntData.setLocation(this.dntLocation);\r\n          translations.init(function() {}, $timeout);\r\n        }\r\n        else {\r\n          this.setLocationByName(urlLocation);\r\n        }\r\n      }\r\n    },\r\n    \r\n    getOverride: function() {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').factory('translations', ['$routeParams', '$rootScope', translations]);\r\nfunction translations($routeParams, $rootScope) {\r\n\r\n  var dnTranslations = new DnTranslations();\r\n  var smallFile = 'uistring.optimised.json';\r\n  var bigFile = 'uistring.json';\r\n\r\n  var completeCallback = [];\r\n  var progressCallback = [];\r\n\r\n  return {\r\n    \r\n    reset : function() {\r\n      dnTranslations = new DnTranslations();\r\n      dnTranslations.sizeLimit = 100;\r\n      this.loaded = false;\r\n      this.startedLoading = false;\r\n      completeCallback = [];\r\n      progressCallback = [];\r\n    },\r\n    \r\n    getFileName: function() {\r\n      if(this.small) {\r\n        // console.log('loading optimised translations');\r\n        return smallFile;\r\n      }\r\n      else {\r\n        // console.log('loading full translations');\r\n        return bigFile;\r\n      }\r\n    },\r\n    \r\n    loaded : false,\r\n    startedLoading : false,\r\n    small: false,\r\n    \r\n    location : null,\r\n  \r\n    init : function(progress, complete) {\r\n\r\n      if(this.isLoaded()) {\r\n        complete();\r\n      }\r\n      else {\r\n        progressCallback = [];\r\n        if(progress) {\r\n          progressCallback.push(progress);\r\n        }\r\n        if(complete) {\r\n          completeCallback.push(complete);\r\n        }\r\n  \r\n        if(!this.startedLoading) {\r\n          this.startedLoading = true;\r\n          var t = this;\r\n          \r\n          var fileName = null;\r\n          if(this.location && this.location != '') {\r\n            fileName = this.location + '/' + this.getFileName();\r\n            \r\n            if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n              sessionStorage.removeItem('UIStrings');\r\n              localStorage.removeItem('UIStrings_file');\r\n            }\r\n          }\r\n          \r\n          $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n          dnTranslations.loadDefaultFile(\r\n            fileName, \r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n            }, \r\n            function() {\r\n              t.loaded = true;\r\n              angular.forEach(completeCallback, function(value, key) { value(); });\r\n              completeCallback = [];\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_EVENT');\r\n            },\r\n            function(msg) {\r\n              angular.forEach(progressCallback, function(value, key) { value(msg); });\r\n              $rootScope.$broadcast('TRANSLATION_LOAD_ERROR');\r\n              t.startedLoading = false;\r\n              t.loaded = false;\r\n            }\r\n          );\r\n        }\r\n      }\r\n    },\r\n    \r\n    isLoaded : function() {\r\n      if(!this.loaded) {\r\n        var fileName = this.location + '/' + this.getFileName();\r\n        \r\n        if(fileName != localStorage.getItem(\"UIStrings_file\")) {\r\n          sessionStorage.removeItem('UIStrings');\r\n          localStorage.removeItem('UIStrings_file');\r\n        }\r\n\r\n        this.loaded = dnTranslations.loadFromSession();\r\n        if(this.loaded) {\r\n          this.startedLoading = true;\r\n        }\r\n      }\r\n      return this.loaded;\r\n    },\r\n    \r\n    translate : function(id,idParam) {\r\n      if(this.loaded) {\r\n        \r\n        var name;\r\n        if(!id) {\r\n          return '';\r\n        }\r\n        else {\r\n          name = dnTranslations.translate(id);\r\n          \r\n          if(typeof name != 'string') {\r\n            return 'm' + name;\r\n          }\r\n        }\r\n        \r\n        if(idParam) {\r\n          var params = idParam.split(',');\r\n          for(var p=0;p<params.length;++p) {\r\n            var pid = params[p];\r\n            if(pid.indexOf('{') == 0) {\r\n              pid = params[p].replace(/\\{|\\}/g,'');\r\n              pid = dnTranslations.translate(pid);\r\n            }\r\n            \r\n            name = name.replace('{' + p + '}', pid);\r\n          }\r\n        }\r\n\r\n        return name;\r\n      }\r\n      else {\r\n        return 'm' + id;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('CreateCtrl', ['$location','$window','$timeout','region','$routeParams', create]);\r\n\r\nfunction create($location, $window, $timeout, region, $routeParams) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if($routeParams.region) {\r\n    region.setLocationByName($routeParams.region);\r\n  }\r\n  \r\n  vm.setJob = function() {\r\n    $timeout(function() {\r\n      console.log('they set the job', vm.job);\r\n      $window.location.href = 'https://dnskillsim.herokuapp.com/' + region.dntLocation.region + '/' + vm.job.d.EnglishName.toLowerCase();\r\n    });\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimViewBuild', viewBuild);\r\n\r\nfunction viewBuild() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: true,\r\n    bindToController: {\r\n      build: '=build',\r\n    },\r\n    templateUrl: 'ui/build/view-build.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [viewBuildController],\r\n  };\r\n}\r\n\r\nfunction viewBuildController() {\r\n  \r\n  var vm = this;\r\n\r\n  vm.baseSkillNums = [];\r\n  vm.specSkillNums = [];\r\n  vm.finalSkillNums = [];\r\n  vm.awakenSkillNums = [];\r\n  setupSkillNums();\r\n\r\n  function setupSkillNums() {\r\n    for(var i=0;i<6*4;++i) {\r\n      vm.baseSkillNums.push(getSkillNum(i));\r\n    }\r\n    \r\n    for(i=6*4;i<6*4*2;++i) {\r\n      vm.specSkillNums.push(getSkillNum(i));\r\n    }\r\n    \r\n    for(i=6*4*2;i<6*4*3;++i) {\r\n      vm.finalSkillNums.push(getSkillNum(i));\r\n    }\r\n    \r\n    for(i=6*4*3;i<6*4*4;++i) {\r\n      vm.awakenSkillNums.push(getSkillNum(i));\r\n    }\r\n  }\r\n  \r\n  function getSkillNum(index) {\r\n    if(vm.build) {\r\n      var chars = vm.build.build.replace(/[!\\.']/g,'').split('');\r\n      if(chars.length > index) {\r\n        var char = chars[index];\r\n        var num = parseInt(char, 36);\r\n        if(num >= 0) {\r\n          return num + 1;\r\n        }\r\n      }\r\n      return ' ';\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('escape', [function() {\r\n  'use strict';\r\n\r\n  function escapeFilter(input) {\r\n      if(input) {\r\n          return window.encodeURIComponent(input);\r\n      }\r\n      return '';\r\n  }\r\n\r\n  return escapeFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').filter('percentage', [function() {\r\n  'use strict';\r\n\r\n  function percentageFilter(input) {\r\n    if(typeof input == 'number') {\r\n      return (Math.round(input * 100 * 100) / 100) + '%';\r\n    }\r\n    else {\r\n      return input;\r\n    }\r\n  }\r\n  percentageFilter.$stateful = false;\r\n\r\n  return percentageFilter;\r\n}]);\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimBuildMenu', menu);\r\n\r\nfunction menu() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: false,\r\n    bindToController: {\r\n    },\r\n    templateUrl: 'ui/menus/build-menu.html',\r\n    controllerAs: 'ctrl',\r\n    controller: ['region','jobs', menuController],\r\n  };\r\n}\r\n\r\nfunction menuController(region, jobs) {\r\n  \r\n  var vm = this;\r\n  \r\n  vm.getRegion = function() {\r\n    if(region.dntLocation) {\r\n      return region.dntLocation.region;\r\n    }\r\n  }\r\n  \r\n  vm.publishBuild = function() {\r\n    \r\n    var parts = window.location.href.replace('//', '::').split('/');\r\n    if(parts && parts.length > 2 && region.dntLocation) {\r\n        \r\n      var jobName = parts[parts.length-2];\r\n      var level = jobName.substr(jobName.length-2);\r\n      jobName = jobName.substr(0, jobName.length-3, 2);\r\n      window.location.href = \"https://spacem.github.io/dnskillsim/publish?build=\"\r\n        + parts[parts.length-1]\r\n        + '&region='\r\n        + region.dntLocation.region\r\n        + '&job='+jobName\r\n        + '&level='+level;\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimHomeMenu', menu);\r\n\r\nfunction menu() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: false,\r\n    bindToController: {\r\n    },\r\n    templateUrl: 'ui/menus/home-menu.html',\r\n    controllerAs: 'ctrl',\r\n    controller: menuController,\r\n  };\r\n}\r\n\r\nfunction menuController() {\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dngearsimLegacyMenu', menu);\r\n\r\nfunction menu() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: false,\r\n    bindToController: {\r\n    },\r\n    templateUrl: 'ui/menus/legacy-menu.html',\r\n    controllerAs: 'ctrl',\r\n    controller: ['region', menuController],\r\n  };\r\n}\r\n\r\nfunction menuController(region) {\r\n  \r\n  var vm = this;\r\n  \r\n  vm.getRegion = function() {\r\n    if(region.dntLocation) {\r\n      return region.dntLocation.region;\r\n    }\r\n  }\r\n}\r\n\r\n})();\r\n","angular.module('dnsim').controller('HeaderCtrl', \r\n[\r\n  function() {\r\n    'use strict';\r\n    var vm = this;\r\n  }\r\n]).directive('dngearsimHeader', function() {\r\n  return {\r\n    templateUrl: 'ui/nav/header.html',\r\n  };\r\n});","angular.module('dnsim').controller('RegionCtrl', \r\n  ['$timeout','$location','region','$http',\r\n  function($timeout,$location,region,$http) {\r\n    'use strict';\r\n    \r\n    var vm = this;\r\n\r\n    vm.override = region.getOverride();\r\n    region.init();\r\n      \r\n    vm.region = region;\r\n    vm.tHoverLocation = region.tlocation;\r\n    vm.hoverLocation = region.dntLocation;\r\n    vm.edit = (region.dntLocation == null);\r\n    vm.dntVersion = '';\r\n    setDntVersion();\r\n    \r\n    vm.toggleEdit = function() {\r\n      vm.edit = !vm.edit;\r\n      if(typeof history_push !== 'undefined') {\r\n        window.setTimeout(history_push, 100);\r\n      }\r\n    }\r\n    \r\n    vm.setHoverLocation = function(hoverLocation) {\r\n      vm.hoverLocation = hoverLocation;\r\n      if(typeof history_push !== 'undefined') {\r\n        window.setTimeout(history_push, 1);\r\n      }\r\n    }\r\n    \r\n    function setDntVersion() {\r\n      // console.log('setting version for ', vm.region.dntLocation);\r\n      if(vm.region.dntLocation && vm.region.dntLocation.url) {\r\n        var url = vm.region.dntLocation.url + '/Version.cfg';\r\n        $http({\r\n          url: url,\r\n          method: 'GET',\r\n          transformResponse: undefined\r\n        }).then(function(res) {\r\n          if(res && res.data) {\r\n            var newLineDetails = res.data.split('\\r\\n');\r\n            if(newLineDetails.length) {\r\n              var spaceDetails = newLineDetails[0].split(' ');\r\n              if(spaceDetails.length > 1) {\r\n                vm.dntVersion = 'v' + spaceDetails[1];\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    vm.getDntLocation = function() {\r\n      return region.dntLocation;\r\n    };\r\n    vm.getTlocation = function() {\r\n      return region.tlocation;\r\n    };\r\n     \r\n    vm.getHostedFiles = function() {\r\n      // console.log('getting hosted files');\r\n      return region.hostedFiles;\r\n    };\r\n    \r\n    vm.setTLocation = function(location) {\r\n      region.setTLocation(location);\r\n      vm.edit = false;\r\n    };\r\n    \r\n    vm.setLocation = function(location) {\r\n      if(typeof history_push !== 'undefined') {\r\n        history_push();\r\n      }\r\n      region.setLocation(location);\r\n      vm.edit = false;\r\n      setDntVersion();\r\n    };\r\n\r\n    vm.setOverride = function(value) {\r\n      region.setOverride(value);\r\n      vm.override = value;\r\n      vm.edit = value;\r\n    };\r\n  }\r\n])\r\n.directive('dngearsimRegion', function() {\r\n  return {\r\n    templateUrl: 'ui/region/region.html',\r\n    controllerAs: 'ctrl',\r\n  };\r\n});","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('SimCtrl', ['$location','$window','$timeout','region','$routeParams', create]);\r\n\r\nfunction create($location, $window, $timeout, region, $routeParams) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('BuildSearchCtrl', ['$routeParams','$location','$timeout','onlineService','jobs', 'region', buildSearch]);\r\n\r\nfunction buildSearch($routeParams,$location,$timeout,onlineService,jobs,region) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if($routeParams.region) {\r\n    region.setLocationByName($routeParams.region);\r\n  }\r\n  \r\n  vm.maxDisplay = 15;\r\n  vm.totalNumResults = 0;\r\n  \r\n  jobs.init(null, function() {\r\n    if($routeParams.jobId) {\r\n      vm.job = jobs.getById($routeParams.jobId);\r\n      getClassBuilds();\r\n    } \r\n  })\r\n  \r\n  this.reloadBuilds = function() {\r\n    vm.allResults = null;\r\n    vm.jobBuilds = null;\r\n    getClassBuilds();\r\n  }\r\n  \r\n  this.setJob = function() {\r\n    $timeout(function() {\r\n      $location.search('jobId', vm.job.id);\r\n    });\r\n  }\r\n  \r\n  this.showMoreResults = function(extra) {\r\n    vm.maxDisplay = vm.totalNumResults + extra;\r\n    vm.totalNumResults = 0;\r\n  }\r\n  \r\n  vm.allResults = null;\r\n  vm.getFilteredBuilds = function() {\r\n    \r\n    // init\r\n    if(vm.allResults == null) {\r\n      vm.allResults = [];\r\n      for(var uid in vm.jobBuilds) {\r\n        for(var buildName in vm.jobBuilds[uid]) {\r\n          if(vm.jobBuilds[uid][buildName] && vm.jobBuilds[uid][buildName].region) {\r\n            var result = {\r\n              uid: uid,\r\n              name: buildName,\r\n              data: vm.jobBuilds[uid][buildName]\r\n            };\r\n            \r\n            if(result.data.about && result.data.about.length > 256) {\r\n              result.data.about = result.data.about.substr(0, 256);\r\n            }\r\n            \r\n            vm.allResults.push(result);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    var results = [];\r\n    for(var i=0;i<vm.allResults.length;++i) {\r\n      \r\n      var result = vm.allResults[i];\r\n      if(vm.filter && vm.filter.length > 0) {\r\n        var f = vm.filter.toUpperCase();\r\n        if(result.name.toUpperCase().indexOf(f) == -1) {\r\n          if(!result.data.guild ||\r\n             result.data.guild.toUpperCase().indexOf(f) == -1) {\r\n\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      results.push(result);\r\n\r\n      if(results.length >= vm.maxDisplay) {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    vm.totalNumResults = results.length;\r\n    return results;\r\n  }\r\n  \r\n  function getClassBuilds() {\r\n    if(vm.job) {\r\n      \r\n      let levelLimit = null;\r\n      if(!vm.includeOldBuilds) {\r\n        levelLimit = 95;\r\n      }\r\n      \r\n      onlineService.getClassBuilds(vm.job, levelLimit).then(function(builds) {\r\n        if(builds) {\r\n          // console.log('got builds', builds);\r\n          vm.jobBuilds = builds;\r\n        }\r\n        else {\r\n          // console.log('no builds');\r\n          vm.jobBuilds = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('ProfileCtrl', ['$location', '$routeParams', 'onlineService','jobs', profile]);\r\n\r\nfunction profile($location, $routeParams, onlineService, jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  \r\n  jobs.init(function() {}, function() {});\r\n  \r\n  getSavedBuilds();\r\n  getProfile();\r\n  \r\n  function getSavedBuilds() {\r\n    onlineService.getUserBuilds(vm.uid).then(function(builds) {\r\n      if(builds) {\r\n        vm.storedBuilds = builds;\r\n      }\r\n      else {\r\n        vm.storedBuilds = {};\r\n      }\r\n    }).catch(function(err) {\r\n      vm.storedBuilds = {};\r\n    });\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    }).catch(function(err) {\r\n      vm.profile = {};\r\n    });\r\n  }\r\n  \r\n  this.getJob = function(build) {\r\n    if(build.job) {\r\n      return jobs.getById(build.job);\r\n    }\r\n  }\r\n  \r\n  this.getBuildJobName = function(build) {\r\n    var buildJob = jobs.getById(build.job);\r\n    if(buildJob) {\r\n      return buildJob.name;\r\n    }\r\n  }\r\n  \r\n  this.getBuildLink = function(build) {\r\n    var buildJob = jobs.getById(build.job);\r\n    if(buildJob) {\r\n      var level = build.level;\r\n      if(!level) {\r\n        level = '93';\r\n      }\r\n      return 'https://dnskillsim.herokuapp.com/' + build.region + '/' + buildJob.d.EnglishName.toLowerCase() + '-' + level + '/' + build.build;\r\n    }\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishCtrl', ['$location', 'onlineService', '$routeParams', 'region', 'jobs', publish]);\r\n\r\nfunction publish($location, onlineService, $routeParams, region, jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  \r\n  if($routeParams.region) {\r\n    region.setLocationByName($routeParams.region);\r\n  }\r\n  \r\n  vm.show = $routeParams.show;\r\n  \r\n  if($routeParams.build && $routeParams.job && $routeParams.region) {\r\n    sessionStorage.setItem('current_skill_build', $routeParams.build);\r\n    sessionStorage.setItem('current_skill_build_job', $routeParams.job);\r\n    sessionStorage.setItem('current_skill_build_region', $routeParams.region);\r\n    sessionStorage.setItem('current_skill_build_level', $routeParams.level);\r\n    region.setLocationByName($routeParams.region);\r\n    console.log('saved build from parameters');\r\n  }\r\n  \r\n  onlineService.login().then(function(user) {\r\n    getSavedBuilds();\r\n    getProfile();\r\n      \r\n    jobs.init(function() {\r\n      \r\n    }, function() {\r\n      getCurrentBuild();\r\n    });\r\n  });\r\n\r\n  \r\n  function getCurrentBuild() {\r\n    \r\n    var englishJobName = sessionStorage.getItem('current_skill_build_job');\r\n    if(englishJobName) {\r\n      var job = jobs.getByEnglishName(englishJobName.toUpperCase());\r\n      if(job) {\r\n        \r\n        var user = vm.getUser();\r\n        var buildName = 'player1';\r\n        if(vm.profile && vm.profile.name) {\r\n          buildName = vm.profile.name;\r\n        }\r\n        \r\n        vm.build = {\r\n          build: sessionStorage.getItem('current_skill_build'),\r\n          job: job.id,\r\n          region: sessionStorage.getItem('current_skill_build_region'),\r\n          level: sessionStorage.getItem('current_skill_build_level'),\r\n          name: buildName\r\n        };\r\n  \r\n        if(!vm.build.build || !vm.build.job || !vm.build.region) {\r\n          vm.build = null;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      vm.build = null;\r\n    }\r\n  }\r\n  \r\n  function getSavedBuilds() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getUserBuilds(user.uid).then(function(builds) {\r\n        if(builds) {\r\n          vm.storedBuilds = builds;\r\n        }\r\n        else {\r\n          vm.storedBuilds = {};\r\n        }\r\n      }).catch(function(err) {\r\n        vm.storedBuilds = {};\r\n      });\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    var user = vm.getUser();\r\n    if(user) {\r\n      onlineService.getProfile(user.uid).then(function(profile) {\r\n        if(profile) {\r\n          vm.profile = profile;\r\n        }\r\n        else {\r\n          vm.profile = {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  this.getJob = function(build) {\r\n    if(build.job) {\r\n      return jobs.getById(build.job);\r\n    }\r\n  }\r\n  \r\n  this.getBuildJobName = function(build) {\r\n    var buildJob = jobs.getById(build.job);\r\n    if(buildJob) {\r\n      return buildJob.name;\r\n    }\r\n  }\r\n  \r\n  this.getBuildLink = function(build) {\r\n    var buildJob = jobs.getById(build.job);\r\n    if(buildJob) {\r\n      var level = build.level;\r\n      if(!level) {\r\n        level = 93;\r\n      }\r\n      return 'https://dnskillsim.herokuapp.com/' + build.region + '/' + buildJob.d.EnglishName.toLowerCase() + '-' + level + '/' + build.build;\r\n    }\r\n  }\r\n  \r\n  this.saveProfile = function() {\r\n    onlineService.saveProfile(vm.profile).then(getProfile).catch(handleError);\r\n  }\r\n  \r\n  this.getUser = function() {\r\n    return onlineService.getUser();\r\n  }\r\n  \r\n  this.save = function() {\r\n    vm.build.lastUpdate = (new Date()).getTime();\r\n    onlineService.saveBuild(vm.build.name, vm.build).then(getSavedBuilds).catch(handleError);\r\n    vm.publishBuild = null;\r\n  }\r\n  \r\n  this.startPublish = function() {\r\n    var buildName = vm.build.name;\r\n    if(buildName in vm.storedBuilds) {\r\n      if(!vm.build.about) {\r\n        vm.build.about = vm.storedBuilds[buildName].about;\r\n      }\r\n      \r\n      if(!vm.build.guild) {\r\n        vm.build.guild = vm.storedBuilds[buildName].guild;\r\n      }\r\n    }\r\n    \r\n    vm.publishBuild = buildName;\r\n  }\r\n  \r\n  function handleError(err) {\r\n    console.log(err);\r\n  }\r\n  \r\n  this.deleteAccount = function() {\r\n    onlineService.deleteAccount(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getBuildLimit = function() {\r\n    if(vm.profile && vm.profile.maxBuilds) {\r\n      return vm.profile.maxBuilds;\r\n    }\r\n    else {\r\n      return 25;\r\n    }\r\n  }\r\n  \r\n  this.getNumStoredBuilds = function() {\r\n    return _.size(vm.storedBuilds);\r\n  }\r\n  \r\n  this.getNumBuilds = function() {\r\n    return _.size(vm.builds);\r\n  }\r\n  \r\n  this.signOut = function() {\r\n    onlineService.signOut();\r\n  }\r\n  \r\n  vm.getAllBuildNames = function() {\r\n    var allKeys = _.keys(vm.storedBuilds);\r\n    return _.uniq(allKeys.sort(), true);\r\n  }\r\n  \r\n  vm.deleteServer = function(buildName) {\r\n    vm.serverToDelete = buildName;\r\n  }\r\n  \r\n  vm.reallyDeleteServer = function(buildName) {\r\n    onlineService.deleteBuild(buildName, vm.storedBuilds[buildName]).then(getSavedBuilds);\r\n    vm.serverToDelete = null;\r\n  }\r\n  \r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\nangular.module('dnsim').controller('PublishedCtrl', ['onlineService', '$location', '$routeParams','jobs', published]);\r\n\r\nfunction published(onlineService, $location, $routeParams, jobs) {\r\n  'use strict';\r\n  \r\n  var vm = this;\r\n  vm.uid = $routeParams.uid;\r\n  vm.buildName = $routeParams.buildName;\r\n  \r\n  getBuild();\r\n  getProfile();\r\n  \r\n  jobs.init(function() {}, function() {});\r\n  \r\n  vm.getBuildLink = function(build) {\r\n    var buildJob = jobs.getById(build.job);\r\n    if(build && buildJob) {\r\n      var level = build.level;\r\n      if(!level) {\r\n        level = 93;\r\n      }\r\n      return 'https://dnskillsim.herokuapp.com/' + build.region + '/' + buildJob.d.EnglishName.toLowerCase() + '-' + level + '/' + build.build;\r\n    }\r\n  }\r\n  \r\n  \r\n  vm.getJob = function(build) {\r\n    if(build.job) {\r\n      return jobs.getById(build.job);\r\n    }\r\n  }\r\n  \r\n  function getProfile() {\r\n    onlineService.getProfile(vm.uid).then(function(profile) {\r\n      if(profile) {\r\n        vm.profile = profile;\r\n      }\r\n      else {\r\n        vm.profile = {};\r\n      }\r\n    }).catch(function(err) {\r\n      console.log('unable to load profile', err);\r\n      vm.profile = {};\r\n    });\r\n  }\r\n  \r\n  function getBuild() {\r\n    onlineService.getBuild(vm.uid, vm.buildName).then(function(build) {\r\n      if(build) {\r\n        vm.build = build;\r\n      }\r\n      else {\r\n        vm.build = {};\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimChooseClass', chooseClass);\r\n\r\nfunction chooseClass() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: true,\r\n    bindToController: {\r\n      job: '=job',\r\n      onSetJob: '&onSetJob'\r\n    },\r\n    templateUrl: 'ui/widgets/choose-class.html',\r\n    controllerAs: 'ctrl',\r\n    controller: [\r\n      '$window','$location','$routeParams','$timeout','jobs', \r\n      chooseClassController],\r\n  };\r\n}\r\n\r\nfunction chooseClassController($window,$location,$routeParams,$timeout,jobs) {\r\n  console.log('choose class');\r\n  this.getFinalJobs = function() {\r\n    var allJobs = jobs.getFinalJobs();\r\n    var finalJobs = [];\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(jobs.getBaseJobName(allJobs[j]) == this.bJob) {\r\n        finalJobs.push(allJobs[j]);\r\n      }\r\n    }\r\n    return finalJobs;\r\n  }\r\n  \r\n  this.getBaseJobs = function() {\r\n    return jobs.getBaseJobs();\r\n  }\r\n  \r\n  this.getJobName = function(englishName) {\r\n    var allJobs = jobs.getAllJobs();\r\n    for(var j=0;j<allJobs.length;++j) {\r\n      if(allJobs[j].d.EnglishName == englishName) {\r\n        return allJobs[j].name;\r\n      }\r\n    }\r\n  }\r\n  \r\n  this.setJob = function(job) {\r\n    this.job = job;\r\n    if(job) {\r\n      this.onSetJob();\r\n    }\r\n  }\r\n  \r\n  \r\n  jobs.init(reportProgress, $timeout);\r\n  function reportProgress(msg) {\r\n    // console.log('progress: ' + msg);\r\n  }\r\n\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimJobIcon', [dnsimJobIcon]);\r\n\r\nfunction dnsimJobIcon() {\r\n  return {\r\n    restrict: 'E',\r\n    scope: {},\r\n    bindToController: {\r\n      item: '=item',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-job-icon.html',\r\n    controller: dnsimJobIconController,\r\n    controllerAs: 'ctrl'\r\n  }\r\n}\r\n\r\nfunction dnsimJobIconController() {\r\n\r\n  this.getIconXPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return ((this.item.d.JobIcon % 9) * 44) + 5;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  this.getIconYPostion = function() {\r\n    if(this.item && this.item.d && this.item.d.JobIcon > 0) {\r\n      return (Math.floor(this.item.d.JobIcon / 9) * 44) + 5;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n})();\r\n","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').directive('dnsimLoading', ['dntData','translations','$timeout', 'region', dnsimLoading]);\r\n\r\nfunction dnsimLoading(dntData, translations, $timeout, region) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n      alsoShowFor: '=alsoShowFor',\r\n    },\r\n    templateUrl: 'ui/widgets/dnsim-loading.html',\r\n    link: function($scope, element, attrs) {\r\n      $scope.$on('TRANSLATION_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_EVENT', function() {\r\n        $scope.setLoadCount();\r\n      });\r\n      \r\n      $scope.$on('DNTDATA_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n      \r\n      $scope.$on('TRANSLATION_LOAD_ERROR', function() {\r\n        $timeout(function() {\r\n          $scope.loadError = true;\r\n        });\r\n      });\r\n\r\n      $scope.numLoading = 0;\r\n      $scope.setLoadCount = function() {\r\n        $scope.noRegion = !region.dntLocation;\r\n        \r\n        var n = dntData.anyLoading();\r\n        if(!translations.isLoaded())\r\n        {\r\n          n++;\r\n        }\r\n        \r\n        $timeout(function() {\r\n          if($scope.numLoading < n || !$scope.totalToLoad) {\r\n            $scope.totalToLoad = n;\r\n          }\r\n          $scope.numLoading = n;\r\n        });\r\n      };\r\n      \r\n      $scope.loadError = false;\r\n      $scope.setLoadCount();\r\n    },\r\n  };\r\n}\r\n\r\n})();","(function () {\r\n'use strict';\r\n\r\nangular.module('dnsim').config(['$routeProvider', config]);\r\n\r\nfunction config($routeProvider) {\r\n\r\n  $routeProvider.\r\n    \r\n    when('/create', {\r\n      templateUrl: 'ui/build/create.html',\r\n      controller: 'CreateCtrl as ctrl',\r\n    }).\r\n    when('/publish', {\r\n      templateUrl: 'ui/online/publish.html',\r\n      controller: 'PublishCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/profile/:uid?', {\r\n      templateUrl: 'ui/online/profile.html',\r\n      controller: 'ProfileCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/published/:uid/:buildName*', {\r\n      templateUrl: 'ui/online/published.html',\r\n      controller: 'PublishedCtrl as ctrl',\r\n    }).\r\n    \r\n    when('/build-search/:jobId?', {\r\n      templateUrl: 'ui/online/build-search.html',\r\n      controller: 'BuildSearchCtrl as ctrl',\r\n    }).\r\n  \r\n    when('/:region?', {\r\n      templateUrl: 'ui/home/home.html'\r\n    }).\r\n    \r\n    otherwise({\r\n      redirectTo: '/'\r\n    });\r\n}\r\n\r\n})();"]}